{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Filter.js","services/phonebook.js","components/Notification.js","components/ContactInfo.js","services/info.js","components/Navbar.js","App.js","index.js"],"names":["Persons","person","takeDown","style","color","Card","className","background","Body","Text","name","number","onClick","PersonForm","props","onSubmit","addToPhoneBook","onChange","handleNameChange","value","newName","placeholder","newNumber","handleNumberChange","type","Filter","handleSearchChange","search","baseUrl","axios","get","then","res","data","contact","post","id","obj","delete","put","Notification","message","ContactInfo","info","minwidth","Header","text","date","Footer","Navbar","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","App","useState","persons","setPersons","setNewName","setNewNumber","setSearch","showAll","setShowAll","noticeBoard","setNoticeBoard","setInfo","useEffect","PhoneBookService","allContacts","setTimeout","catch","error","infoMessage","InfoService","infos","e","preventDefault","newPerson","personExists","find","f","window","confirm","changedPerson","editedNote","map","p","response","saveContact","concat","target","personsToShow","filter","toLowerCase","includes","exact","path","render","key","personToDelete","alreadyDeletedPerson","inf","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.34b45c3d.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\n\r\nconst Persons = ({person, takeDown}) => {\r\n    return(\r\n        <div style={{color: '#5203fc'}}>\r\n            <Card className=\"shadow-lg m-5 rounded\" style={{background : '#ffffff'}} >\r\n                <Card.Body>\r\n                    <Card.Text className=\"display-5\">\r\n                        {person.name} {person.number} <button className=\" btn btn-danger m-2\" onClick={takeDown}>Delete</button>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return(\r\n        <div >\r\n            <form onSubmit={props.addToPhoneBook}>\r\n        \r\n                <div className='form-group m-3'>\r\n                <h2>Add New Entry</h2>\r\n                <input \r\n                        onChange={props.handleNameChange}\r\n                        value={props.newName}\r\n                        className=\"form-control \"\r\n                        placeholder=\"Name\"\r\n                        />\r\n                \r\n                </div>\r\n                <div className='form-group m-3'>\r\n                <input \r\n                    value={props.newNumber}\r\n                    onChange={props.handleNumberChange}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Number\"\r\n                />\r\n                </div>\r\n                <button className=\"btn btn-primary mb-5\" type=\"submit\">Add</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return(\r\n        <div className='form-group m-3'>\r\n            <form>\r\n                <input \r\n                    onChange={props.handleSearchChange}\r\n                    value={props.search}\r\n                    className=\"form-control \"\r\n                    placeholder=\"Filter Shown with\"\r\n                />\r\n             </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import axios from 'axios'\r\nconst baseUrl = '/api/persons/'\r\n\r\nconst getPhonebook = ()=> {\r\n    const req = axios.get(baseUrl)\r\n    return req.then(res => res.data)\r\n}\r\n\r\n\r\nconst collectContacts = (contact) => {\r\n    const req = axios.post(baseUrl, contact)\r\n    return req.then(res => res.data)\r\n}\r\n\r\nconst eraser = (id, obj) => {\r\n    const req = axios.delete(`${baseUrl}/${id}`, obj)\r\n    return req.then(res => res.data)\r\n}\r\n\r\nconst updateAuser = (id, obj) => {\r\n    const req = axios.put(`${baseUrl}/${id}`, obj)\r\n    return req.then(res => res.data)\r\n}\r\n\r\nexport default { getPhonebook, collectContacts, eraser, updateAuser }","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n    //method controls the whole div showing or not\r\n    if(message === null){\r\n        return null\r\n    }\r\n    return(\r\n        <div className=\"notice\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\n\r\nconst ContactInfo = ({info}) => {\r\nreturn (\r\n<div >\r\n\r\n        <Card className=\"shadow-lg  m-5 rounded\"  style={{minwidth: '450'}}>\r\n            <Card.Header className=\"display-4 font-weight-bold\">Contact Info</Card.Header>\r\n            <Card.Body>\r\n                <Card.Text className=\"display-5\">\r\n                    {info.text}\r\n                </Card.Text>\r\n                <Card.Text className=\"display-5\">\r\n                    {info.date}\r\n                </Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer className=\"font-italic\"> Courtesy of the coffee boys club </Card.Footer>\r\n        </Card>\r\n        \r\n</div>\r\n)\r\n}\r\n\r\nexport default ContactInfo","import axios from 'axios'\r\nconst baseUrl = '/api/info'\r\n\r\nconst getInfo = () => {\r\n    const req = axios.get(baseUrl)\r\n    return req.then(res => res.data)\r\n}\r\n\r\nexport default { getInfo }","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return(\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\" >\r\n            <a className=\"navbar-brand\" style={{color: 'white'}} href=\"/\">Phonebook App</a>\r\n            <button \r\n                className=\"navbar-toggler btn btn-primary\" \r\n                type=\"button\" \r\n                data-toggle=\"collapse\" \r\n                data-target=\"#navbarSupportedContent\" \r\n                aria-controls=\"navbarSupportedContent\" \r\n                aria-expanded=\"false\" \r\n                aria-label=\"Toggle navigation\"\r\n                style={{color:'white'}}\r\n            >\r\n                menu\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav m-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link text-uppercase text-white ml-5\" to=\"/\">Contacts</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link text-uppercase text-white ml-5\" to=\"/info\">Info</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n/*\r\n<Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"#\">Phonebook App</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"/\" >Contacts</Nav.Link>\r\n          <Nav.Link href=\"/info\">Info</Nav.Link>\r\n        </Nav>\r\n      </Navbar>\r\n*/","import React, {useState, useEffect} from 'react'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport PhoneBookService from './services/phonebook'\nimport Notification from './components/Notification'\nimport ContactInfo from './components/ContactInfo'\nimport {  BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport InfoService from './services/info'\nimport Navbar from './components/Navbar'\n \n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('') //name field's state\n  const [newNumber, setNewNumber] = useState('') //number field's state\n  const [search, setSearch] = useState([]) //search field's state\n  const [showAll, setShowAll] = useState(true) //state handles what to show\n  const [noticeBoard, setNoticeBoard] = useState(null) //for notifications\n  const [info, setInfo] = useState(null)\n\n//use effect handling our promises\nuseEffect(() => {\n  PhoneBookService\n    .getPhonebook()\n    .then(allContacts => {\n      setPersons(allContacts)\n      setNoticeBoard('ALL NOTES FETCHED')\n      setTimeout(() => {\n        setNoticeBoard(null)\n      }, 5000);\n    })\n    .catch(error =>{\n      setNoticeBoard(`UNABLE TO FETCH DATA: PROBABLY METHOD NOT WORKING`)\n        setTimeout(() => {\n        setNoticeBoard(null)\n      }, 5000);\n    })\n}, [])\n\n\n//I forced state hooks to maintain data here lols..ha ha\nconst dummyText = [\n  {\n    \"id\" : 0,\n    \"text\": \"i am a placeholder\",\n    \"date\" : \"today\"\n  }\n]\n\nconst infoMessage = info === null ? dummyText : info\n\n  ////test here\n  useEffect(() => {\n    InfoService\n     .getInfo()\n     .then(infos => {\n        setInfo(infos)\n     })\n     \n  }, [])\n\n  \n\n\n  //TODO: ADD OR UPDATE A PERSON\n  const addToPhoneBook= (e) => {\n    //prevent reloading\n    e.preventDefault()\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n    const personExists = persons.find(f => f.name === newPerson.name)\n    \n    if(newPerson.name !== ''){ //AVOID EMPTY NAMES BEING ENTERED\n    //TODO: UPDATE A PERSON\n    if(personExists){\n      if(personExists.number !== newPerson.number){\n        if(window.confirm(`${personExists.name} is already added to phonebook, replace the old number with new one?`)){\n          const changedPerson = {...personExists, number: newPerson.number}\n          PhoneBookService\n            .updateAuser(personExists.id, changedPerson)\n            .then(editedNote =>{\n              setPersons(persons.map(p => p.id !== personExists.id ? p : editedNote))\n              setNoticeBoard(`UPDATED ${personExists.name}`)\n              setTimeout(() => {\n                setNoticeBoard(null)\n              }, 5000);\n            })\n            .catch(error => {\n              setNoticeBoard(error.response.data.error)\n                setTimeout(() => {\n                setNoticeBoard(null)\n              }, 5000);\n            })\n        }\n      } \n    } else { //TODO: ADD A PERSON IF EXIST NOT\n      PhoneBookService\n      .collectContacts(newPerson)\n      .then(saveContact =>{\n        setPersons(persons.concat(saveContact))\n        setNoticeBoard(`ADDED ${newPerson.name}`)\n        setTimeout(() => {\n          setNoticeBoard(null)\n        }, 5000);\n      })\n      .catch(error => {\n        setNoticeBoard(error.response.data.error)\n          setTimeout(() => {\n            setNoticeBoard(null)\n          }, 5000);\n        })\n    }\n  } else { //IF DETAILS ARE EMPTY SHOW MESSAGE\n    setNoticeBoard(`UNABLE TO ADD PERSON WITH NO DETAILS`)\n          setTimeout(() => {\n            setNoticeBoard(null)\n          }, 5000);\n  }\n    //clear the field\n    setNewName('')\n    setNewNumber('')\n  }\n\n  //Monitor the new entries' name\n  const handleNameChange = (e) => {\n    //console.log(e.target.value)\n    setNewName(e.target.value)\n  }\n\n  //Monitor the new entries' numbers\n  //add new numbers with help of the state\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value)\n    //console.log(e.target.value)\n  }\n\n  \n //Monitor filtering input field then set it\n // as value to the state n manually change\n //boolean showAll to false\n  const handleSearchChange =(e) => {\n    setSearch(e.target.value)\n    setShowAll(false) \n  }\n\n  const personsToShow = showAll ? \n  persons:\n  persons.filter(person =>person.name.toLowerCase().includes(search))\n  \n  \n  //TODO: DELETE A PERSON\n  const deletAperson = (id) => {\n   return (() =>{\n    const personToDelete = persons.find(f => f.id === id)\n\n    //TODO: CONFIRM B4 DELETING A PERSON \n    if(window.confirm(`Delete ${personToDelete.name} ?`)) {\n      \n      PhoneBookService\n        .eraser(id, personToDelete)\n        .then(alreadyDeletedPerson =>{\n          setPersons(persons.filter(f =>f.id !== id))\n        })\n        .catch(error =>{\n          setNoticeBoard(error.response.data.error)\n          setTimeout(() => {\n            setNoticeBoard(null)\n          }, 5000);\n        }\n      )\n    }\n   })\n  }\n\n  \n\n  \n\n  return (\n    <Router>\n      <div className=\"main\">\n      <Navbar />\n        <p className=\"display-5 font-weight-bold m-5\">Welcome: This is a basic app that demonstrates the create, read,\n          update and delete functionalities of a react nodejs single page application.\n          Please feel at home.\n        </p>\n        <Switch>\n            <Route exact path=\"/\"  render={() => \n                <div>\n                    <Notification message={noticeBoard}/>\n                    <div>\n                      \n                      <Filter \n                        handleSearchChange={handleSearchChange}\n                        search={search}\n                      />\n                    </div>\n                    <PersonForm \n                      addToPhoneBook={addToPhoneBook}\n                      handleNameChange={handleNameChange}\n                      newName={newName}\n                      newNumber={newNumber}\n                      handleNumberChange={handleNumberChange}\n                    />\n                    <h2>Numbers</h2>\n                        {personsToShow.map(person => \n                        <Persons key={person.id} person={person} takeDown={deletAperson(person.id)}/>)}\n                    </div>\n              }/>\n              <Route exact path=\"/info\" render={() => \n                  <div>\n                  {infoMessage.map(inf => \n                    <ContactInfo key={inf.id} info={inf} />)}\n                  </div>\n                }/>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render( <App />, document.getElementById('root'))\n\n"],"sourceRoot":""}